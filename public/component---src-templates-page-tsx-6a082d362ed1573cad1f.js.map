{"version":3,"sources":["webpack:///./src/components/HeaderList.tsx","webpack:///./src/templates/page.tsx"],"names":["HeaderList","componentDidMount","this","context","headers","setHeaders","props","componentDidUpdate","prevProps","length","render","React","contextTypes","PropTypes","isRequired","Page","baseUrl","window","location","origin","collapsables","document","getElementsByClassName","i","classList","add","customBlockWrapper","querySelector","firstChild","firstElementChild","outerHTML","replace","addEventListener","event","preventDefault","currentTarget","parentElement","toggle","content","page","data","markdownRemark","version","process","GATSBY_DOCS_VERSION","pageTitle","frontmatter","title","htmlPageContent","html","realHeadingsList","headings","filter","heading","indexOf","value","match","regex","RegExp","replaceImageLinks","replaceDynamicLinks","counter","forEach","h","depth","createAnchorForHeadings","removeTableOfContents","react","Helmet_default","a","lang","href","rel","pathname","type","HeaderList_HeaderList","className","dangerouslySetInnerHTML","__html","query"],"mappings":"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","file":"component---src-templates-page-tsx-6a082d362ed1573cad1f.js","sourcesContent":["/*\r\n * SonarQube\r\n * Copyright (C) 2009-2020 SonarSource SA\r\n * mailto:info AT sonarsource DOT com\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3 of the License, or (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with this program; if not, write to the Free Software Foundation,\r\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { MarkdownHeading } from '../@types/graphql-types';\r\n\r\ninterface Props {\r\n  headers: MarkdownHeading[];\r\n}\r\n\r\nexport default class HeaderList extends React.PureComponent<Props> {\r\n  static contextTypes = {\r\n    headers: PropTypes.object.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.context.headers.setHeaders(this.props.headers);\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (prevProps.headers.length !== this.props.headers.length) {\r\n      this.context.headers.setHeaders(prevProps.headers);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","/*\r\n * SonarQube\r\n * Copyright (C) 2009-2020 SonarSource SA\r\n * mailto:info AT sonarsource DOT com\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3 of the License, or (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with this program; if not, write to the Free Software Foundation,\r\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\nimport { graphql } from 'gatsby';\r\nimport * as React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { MarkdownHeading, MarkdownRemark, MarkdownRemarkConnection } from '../@types/graphql-types';\r\nimport HeaderList from '../components/HeaderList';\r\n\r\ninterface Props {\r\n  data: {\r\n    allMarkdownRemark: Pick<MarkdownRemarkConnection, 'edges'>;\r\n    markdownRemark: Pick<MarkdownRemark, 'html' | 'headings' | 'frontmatter'>;\r\n  };\r\n  location: Location;\r\n}\r\n\r\nexport default class Page extends React.PureComponent<Props> {\r\n  baseUrl = '';\r\n\r\n  componentDidMount() {\r\n    if (window) {\r\n      this.baseUrl = window.location.origin + '/';\r\n    }\r\n    const collapsables = document.getElementsByClassName('collapse');\r\n\r\n    for (let i = 0; i < collapsables.length; i++) {\r\n      collapsables[i].classList.add('close');\r\n      const customBlockWrapper = collapsables[i].querySelector('.custom-block-body');\r\n      if (customBlockWrapper) {\r\n        let firstChild = customBlockWrapper.firstElementChild;\r\n        if (firstChild) {\r\n          firstChild.outerHTML = firstChild.outerHTML\r\n            .replace(/<h2/gi, '<a href=\"#\"')\r\n            .replace(/<\\/h2>/gi, '</a>');\r\n\r\n          // We changed the element. It's reference is no longer correct in some\r\n          // browsers. Fetch it again.\r\n          firstChild = customBlockWrapper.firstElementChild;\r\n          firstChild!.addEventListener('click', (event: Event & { currentTarget: HTMLElement }) => {\r\n            event.preventDefault();\r\n            if (\r\n              event.currentTarget.parentElement &&\r\n              event.currentTarget.parentElement.parentElement\r\n            ) {\r\n              event.currentTarget.parentElement.parentElement.classList.toggle('close');\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const page = this.props.data.markdownRemark;\r\n    const version = process.env.GATSBY_DOCS_VERSION || '8.1';\r\n    const mainTitle = 'SonarQube 文件';\r\n    const pageTitle = page.frontmatter && page.frontmatter.title;\r\n\r\n    let htmlPageContent = page.html || '';\r\n\r\n    const realHeadingsList = removeExtraHeadings(htmlPageContent, page.headings || []);\r\n\r\n    htmlPageContent = removeTableOfContents(htmlPageContent);\r\n    htmlPageContent = createAnchorForHeadings(htmlPageContent, realHeadingsList);\r\n    htmlPageContent = replaceDynamicLinks(htmlPageContent);\r\n    htmlPageContent = replaceImageLinks(htmlPageContent);\r\n\r\n    return (\r\n      <>\r\n        <Helmet title={pageTitle ? `${pageTitle} | ${mainTitle}` : mainTitle}>\r\n          <html lang=\"zh-TW\" />\r\n          <link href={`/SonarQubeChineseDoc${version}/favicon.ico`} rel=\"icon\" />\r\n          <link\r\n            href={this.baseUrl + this.props.location.pathname.replace(version, 'latest')}\r\n            rel=\"canonical\"\r\n          />\r\n          <script type=\"text/javascript\">{`\r\n            (function(window,document) {\r\n              (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\r\n                (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\n              m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n              })(window, document,'script','https://www.google-analytics.com/analytics.js','ga');\r\n              ga('create', 'UA-1880045-11' , 'auto');\r\n              ga('send', 'pageview');\r\n            })(window,document);\r\n          `}</script>\r\n        </Helmet>\r\n        <HeaderList headers={realHeadingsList} />\r\n        <h1>{pageTitle || mainTitle}</h1>\r\n        <div\r\n          className=\"markdown-content\"\r\n          // Safe: comes from the backend\r\n          dangerouslySetInnerHTML={{ __html: htmlPageContent }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    allMarkdownRemark {\r\n      edges {\r\n        node {\r\n          html\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      headings {\r\n        depth\r\n        value\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction replaceImageLinks(content: string) {\r\n  const version = process.env.GATSBY_DOCS_VERSION || '';\r\n  if (version !== '') {\r\n    content = content.replace(/<img src=\"\\/images\\/(.*?)\"/gim, `<img src=\"/${version}/images/$1\"`);\r\n  }\r\n  return content;\r\n}\r\n\r\nfunction replaceDynamicLinks(content: string) {\r\n  // Make outside link open in a new tab\r\n  content = content.replace(\r\n    /<a href=\"http(.*?)\">(.*?)<\\/a>/gim,\r\n    '<a href=\"http$1\" target=\"_blank\">$2</a>'\r\n  );\r\n\r\n  // Render only the text part of links going inside the app\r\n  return content.replace(\r\n    /<a href=\"(.*)\\/#(?:sonarqube|sonarcloud|sonarqube-admin)#.*?\">(.*?)<\\/a>/gim,\r\n    '$2'\r\n  );\r\n}\r\n\r\n/**\r\n * For the sidebar table of content, we do not want headers for sonarcloud,\r\n * collapsable container title, of table of contents headers.\r\n */\r\nfunction removeExtraHeadings(content: string, headings: MarkdownHeading[]) {\r\n  return headings\r\n    .filter(\r\n      heading =>\r\n        content.indexOf(\r\n          `<div class=\"custom-block collapse\"><div class=\"custom-block-body\"><h2>${heading.value}</h2>`\r\n        ) < 0\r\n    )\r\n    .filter(heading => !heading.value || !heading.value.match(/Table of content/i))\r\n    .filter(heading => {\r\n      const regex = new RegExp(\r\n        `<!-- sonarcloud -->[\\\\s\\\\S]*<h2>${heading.value!.replace(\r\n          /[.*+?^${}()|[\\]\\\\]/g,\r\n          '\\\\$&'\r\n        )}<\\\\/h2>[\\\\s\\\\S]*<!-- /sonarcloud -->`,\r\n        'gim'\r\n      );\r\n      return !content.match(regex);\r\n    });\r\n}\r\n\r\nfunction createAnchorForHeadings(content: string, headings: MarkdownHeading[]) {\r\n  let counter = 1;\r\n  headings.forEach(h => {\r\n    if (h.depth === 2) {\r\n      content = content.replace(\r\n        `<h${h.depth}>${h.value}</h${h.depth}>`,\r\n        `<h${h.depth} id=\"header-${counter}\">${h.value}</h${h.depth}>`\r\n      );\r\n      counter++;\r\n    }\r\n  });\r\n  return content;\r\n}\r\n\r\nfunction removeTableOfContents(content: string) {\r\n  return content.replace(/<h[1-9]>Table Of Contents<\\/h[1-9]>/i, '');\r\n}\r\n"],"sourceRoot":""}