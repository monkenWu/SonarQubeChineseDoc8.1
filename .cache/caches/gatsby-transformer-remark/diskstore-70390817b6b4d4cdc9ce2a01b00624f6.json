{"expireTime":9007200870884089000,"key":"transformer-remark-markdown-html-b79fb8c281c67ee392d1a6b5fc3142c0-gatsby-remark-custom-blocks-/SonarQubeChineseDoc8.1","val":"<p><em>Pull Request decoration is available as part of <a href=\"https://redirect.sonarsource.com/editions/developer.html\">Developer Edition</a> and <a href=\"https://www.sonarsource.com/plans-and-pricing/\">above</a>.</em></p>\n<p>You can add SonarQube analysis and a Quality Gate to your Pull Requests (PR) in your ALM provider's interface.</p>\n<h2>Pull Request Decoration by provider</h2>\n<p>Click your ALM provider below to expand the instructions on decorating your Pull Requests.</p>\n<div class=\"custom-block collapse\"><div class=\"custom-block-body\"><h2>GitHub Enterprise and GitHub.com</h2><p><em>For GitHub Enterprise, the minimum version is 2.14</em></p><h3>Creating a GitHub App</h3><p>To add Pull Request decoration in GitHub checks, an instance administrator needs to create a GitHub App:</p><ol>\n<li>\n<p>Follow Steps 1â€“4 <a href=\"https://developer.github.com/apps/building-github-apps/creating-a-github-app/\">here</a> to start creating your GitHub App.</p>\n</li>\n<li>\n<p>Under <strong>GitHub App name</strong>, give your app a name (such as SonarQubePRChecks).</p>\n</li>\n<li>\n<p>GitHub requires a <strong>Homepage URL</strong> and a <strong>Webhook URL</strong>. These values aren't important for Pull Request decoration, so you can use any URL (such as <code>https://www.sonarqube.org/</code>).</p>\n</li>\n<li>\n<p>Grant access for the following <strong>Permissions</strong></p>\n<table>\n<thead>\n<tr>\n<th>Permission</th>\n<th>Access</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Checks</td>\n<td>Read &#x26; write</td>\n</tr>\n<tr>\n<td><strong>GitHub Enterprise:</strong> Repository metadata <br/> <strong>GitHub.com:</strong> Metadata</td>\n<td>Read-only</td>\n</tr>\n<tr>\n<td>Pull Requests</td>\n<td>Read-only</td>\n</tr>\n<tr>\n<td>Commit statuses</td>\n<td>Read-only</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>Under \"Where can this GitHub App be installed?,\" select <strong>Any account</strong>.  </p>\n</li>\n<li>\n<p>Click <strong>Create GitHub App</strong>. This will take you to your new GitHub App's page.  </p>\n</li>\n<li>\n<p>Scroll down to the bottom of your app page and click <strong>Generate Private Key</strong>. This downloads a <code>.pem</code> file that you'll use in the <strong>Setting your global settings</strong> section.  </p>\n</li>\n</ol><h3>Installing your app</h3><p>Install your GitHub App from the app's settings page. See the <a href=\"https://developer.github.com/apps/installing-github-apps/\">GitHub instructions</a> for more information.</p><h3>Setting your global settings</h3><p>To set your global settings in SonarQube, navigate to <strong>Administration > Configuration > General Settings > Pull Request Decoration</strong> and select the <strong>GitHub</strong> tab.</p><p>From here, set your <strong>Configuration Name</strong>, <strong>GitHub Instance URL</strong>, <strong>GitHub App ID</strong>, and your GitHub App's <strong>Private Key</strong> (that was generated above in the <strong>Creating a GitHub App</strong> section).</p><p><strong>Note:</strong> Make sure the Configuration name is succinct and easily recognizable as it will be used at the project level to identify the correct ALM configuration.</p><h3>Setting your project settings</h3><p>Go to <strong>Administration > General Settings > Pull Request Decoration</strong>, select your <strong>Configuration Name</strong>, and set your <strong>Repository identifier</strong>.</p></div></div>\n<div class=\"custom-block collapse\"><div class=\"custom-block-body\"><h2>Bitbucket Server</h2><p><em>Minimum BitBucket Server version 5.15</em></p><p>A Bitbucket Server user account is used to decorate Pull Requests. We recommend creating a dedicated Bitbucket Server account with Administrator permissions to decorate Pull Requests. You need a <a href=\"https://confluence.atlassian.com/bitbucketserver0515/personal-access-tokens-961275199.html\">Personal Access Token</a> from this account with <strong>Write</strong> permission for the repositories that will be analyzed.</p><p>To add Pull Request decoration on Bitbucket Server, you also need to update your global and project settings. </p><h3>Setting your global settings</h3><p>To set your global settings in SonarQube, navigate to <strong>Administration > Configuration > General Settings > Pull Request Decoration</strong> and select the <strong>Bitbucket Server</strong> tab.</p><p>From here, set your  <strong>Configuration name</strong>, <strong>Bitbucket Server URL</strong>, and the <strong>Personal Access Token</strong> of the account you're using to decorate your Pull Requests.</p><p><strong>Note:</strong> Make sure the Configuration name is succinct and easily recognizable as it will be used at the project level to identify the correct ALM configuration.</p><h3>Setting your project settings</h3><p>Go to <strong>Administration > General Settings > Pull Request Decoration</strong>, select your <strong>Configuration name</strong>, and set your <strong>Project Key</strong> and <strong>Repo Slug</strong>.</p></div></div>\n<div class=\"custom-block collapse\"><div class=\"custom-block-body\"><h2>Azure DevOps Server</h2><p>An Azure DevOps Server user account is used to decorate Pull Requests. We recommend creating a dedicated Azure DevOps Server account with Administrator permissions to decorate Pull Requests. You need a <a href=\"https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=tfs-2017&#x26;tabs=preview-page\">Personal Access Token</a> from this account with the scope authorized for <strong>Code > Read &#x26; Write</strong> for the repositories that will be analyzed.</p><p>To add Pull Request decoration on Azure DevOps Server, you also need to update your global and project settings. </p><h3>Setting your global settings</h3><p>To set your global settings in SonarQube, navigate to <strong>Administration > Configuration > General Settings > Pull Request Decoration</strong> and select the <strong>Azure DevOps Server</strong> tab.</p><p>From here, set your <strong>Configuration name</strong> and the <strong>Personal Access Token</strong> of the account you're using to decorate your Pull Requests.</p><p><strong>Note:</strong> Make sure the Configuration name is succinct and easily recognizable as it will be used at the project level to identify the correct ALM configuration.</p><h3>Setting your project settings</h3><p>Go to <strong>Administration > General Settings > Pull Request Decoration</strong> and select your <strong>Configuration name</strong>.</p></div></div>\n<div class=\"custom-block collapse\"><div class=\"custom-block-body\"><h2>GitLab Self-Managed and GitLab.com</h2><p><em>For GitLab Self-Managed, the minimum version is 11.7</em></p><p>A GitLab user account is used to decorate Merge Requests. We recommend creating a dedicated GitLab account with at least <strong>Reporter</strong> <a href=\"https://docs.gitlab.com/ee/user/permissions.html\">permissions</a> (the account needs permission to leave comments) to decorate Merge Requests. You need a Personal Access Token from this account with the scope authorized for <strong>api</strong> for the repositories that will be analyzed.</p><p>To add Merge Request decoration to GitLab, you also need to update your global and project settings.</p><h3>Setting your global settings</h3><p>To set your global settings in SonarQube, navigate to <strong>Administration > Configuration > General Settings > Pull Request Decoration</strong> and select the <strong>GitLab</strong> tab.  </p><p>From here, set your <strong>Configuration name</strong> and the <strong>Personal Access Token</strong> of the account you're using to decorate your Merge Requests.</p><p><strong>Note:</strong> Make sure the Configuration name is succinct and easily recognizable as it will be used at the project level to identify the correct ALM configuration.</p><h3>Setting your project settings</h3><p>Go to <strong>Administration > General Settings > Pull Request Decoration</strong> and select your <strong>Configuration name</strong>.</p></div></div>\n<h2>Multiple ALM instances</h2>\n<p>It's possible to decorate Pull Requests from multiple ALM instances. To do this, you can create a configuration (as shown in the previous section) for each of your ALM instances. That instance configuration can then be assigned to the appropriate projects.</p>\n<p>As part of <a href=\"https://redirect.sonarsource.com/editions/developer.html\">Developer Edition</a>, you can create one configuration for each ALM. </p>\n<p>As part of <a href=\"https://redirect.sonarsource.com/editions/enterprise.html\">Enterprise Edition</a> and <a href=\"https://www.sonarsource.com/plans-and-pricing/\">above</a>, you can create multiple configurations for each ALM.</p>\n<h2>Issue links</h2>\n<p>During pull request decoration, individual issues will be linked to their SonarQube counterparts automatically. However, for this to work correctly, the instance's <strong>Server base URL</strong> (<strong><a href=\"/SonarQubeChineseDoc8.1/#sonarqube-admin#/admin/settings/\">Administration > Configuration > General Settings > General > General</a></strong>) must be set correctly. Otherwise the links will default to <code>localhost</code>.</p>"}