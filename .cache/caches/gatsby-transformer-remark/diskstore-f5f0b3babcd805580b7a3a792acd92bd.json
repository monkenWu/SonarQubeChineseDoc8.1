{"expireTime":9007200870884089000,"key":"transformer-remark-markdown-html-41a022360c6cae0ffec9ddba9be4032c-gatsby-remark-custom-blocks-/SonarQubeChineseDoc8.1","val":"<h2>Overview</h2>\n<p>SonarQube comes with a number of global security features:</p>\n<ul>\n<li>on-board authentication and authorization mechanisms</li>\n<li>the ability to force users to authenticate before they can see any part of a SonarQube instance</li>\n<li>the ability to delegate to authentication (for more see <a href=\"/SonarQubeChineseDoc8.1/instance-administration/delegated-auth/\">Delegating Authentication</a>)</li>\n</ul>\n<p>Additionally, you can configure at a group or user level who can:</p>\n<ul>\n<li>see that a project even exists</li>\n<li>access a project's source code </li>\n<li>administer a project (set exclusion patterns, tune plugin configuration for that project, etc.)</li>\n<li>administer Quality Profiles, Quality Gates, and the SonarQube instance itself.</li>\n</ul>\n<p>Another aspect of security is the encryption of settings such as passwords. SonarQube provides a built-in mechanism to encrypt settings.</p>\n<h2>Authentication</h2>\n<p>The first question that should be answered when setting the security strategy for SonarQube is: Can anonymous users browse the SonarQube instance or is authentication be required? </p>\n<p>To force user authentication, log in as a system administrator, go to <strong><a href=\"/SonarQubeChineseDoc8.1/#sonarqube-admin#/admin/settings?category=security\">Administration > Configuration > General Settings > Security</a></strong>, and set the <strong>Force user authentication</strong> property to true. </p>\n<div class=\"custom-block alert alert-info\"><div class=\"custom-block-body\"><p>SonarQube does not support sharing email addresses across multiple users.</p></div></div>\n<h3>Authentication Mechanisms</h3>\n<p>Authentication can be managed through a number of mechanisms:</p>\n<ul>\n<li>Via the SonarQube built-in users/groups database</li>\n<li>Via external identity providers such as an LDAP server (including LDAP Service of Active Directory), GitHub etc. See the Authentication &#x26; Authorization section of the Plugin Library.</li>\n<li>Via HTTP headers</li>\n</ul>\n<h3>Technical Users</h3>\n<p>When you create a user in SonarQube's own database, it is considered local and will only be authenticated against SonarQube's own user/group database rather than against any external tool (LDAP, Active Directory, Crowd, etc.). By default <code>admin</code> is a local account.</p>\n<p>Similarly, all non-local accounts will be authenticated only against the external tool. </p>\n<p>An Administrator can manage tokens on a user's behalf via <strong><a href=\"/SonarQubeChineseDoc8.1/#sonarqube-admin#/admin/users\">Administration > Security > Users</a></strong>. From here, click in the user's <strong>Tokens</strong> column to see the user's existing tokens, and either revoke existing tokens or generate new ones. Once established, a token is the only credential needed to run an analysis. Tokens should be passed as the value of the <code>sonar.login</code> property.</p>\n<h3>Default Admin Credentials</h3>\n<p>When installing SonarQube, a default user with Administer System permission is created automatically:</p>\n<ul>\n<li>Login: admin</li>\n<li>Password: admin</li>\n</ul>\n<h2>Reinstating Admin Access</h2>\n<p>If you changed and then lost the <code>admin</code> password, you can reset it using the following query:</p>\n<pre><code>update users set crypted_password = '$2a$12$uCkkXmhW5ThVK8mpBvnXOOJRLd64LJeHTeCkSuB3lfaR2N0AYBaSi', salt=null, hash_method='BCRYPT' where login = 'admin'\n</code></pre>\n<p>If you've deleted <code>admin</code> and subsequently locked out the other users with global administrative permissions, you'll need to re-grant <code>admin</code> to a user with the following query:</p>\n<pre><code>INSERT INTO user_roles(user_id, role, organization_uuid) \nVALUES ((select id from users where login='mylogin'), \nadmin', \n(select uuid from organizations where kee='default-organization'));\n</code></pre>\n<h2>Authorization</h2>\n<p>The way authorization is implemented in SonarQube is pretty standard. It is possible to create as many users and groups of users as needed. The users can then be attached (or not) to (multiple) groups. Groups and / or users are then given (multiple) permissions. The permissions grant access to projects, services and functionalities.</p>\n<p>To administer groups and users, choose <strong>Administration > Security</strong>, and use the sub-menu items.</p>\n<h3>User</h3>\n<p>Multiple integrations that allow the delegation of authentication are available (see the <a href=\"https://redirect.sonarsource.com/doc/plugin-library.html\">Plugin Library</a> and <a href=\"https://docs.sonarqube.org/display/PLUG/Other+Plugins\">Other Plugins</a>, but you can manually create and edit users at <strong><a href=\"/SonarQubeChineseDoc8.1/#sonarqube-admin#/admin/users\">Settings > Security > Users</a></strong>. For manually-created users, login and password can be set at creation. Manually-created users can edit their passwords.</p>\n<p>During both user creation and edit, you can set an account's screen name, email address. User login and email address will be implicitly recognized by the Issue Assignment feature as SCM accounts if applicable, but you can set additional SCM accounts explicitly. </p>\n<h3>Group</h3>\n<p>A group is a set of users.</p>\n<p>To administer groups, go to <strong><a href=\"/SonarQubeChineseDoc8.1/#sonarqube-admin#/admin/groups\">Administration > Security > Groups</a></strong>.</p>\n<p>To edit the membership of a group, click the icon next to the membership total.</p>\n<p>Two groups have a special meaning:</p>\n<ul>\n<li><strong>Anyone</strong> is a group that exists in the system, but that cannot be managed. Every user belongs to this group, including Anonymous user.</li>\n<li><strong>sonar-users</strong> is the default group to which users are automatically added.</li>\n</ul>\n<h3>Global Permissions</h3>\n<p>To set global permissions, log in as a System administrator and go to <strong><a href=\"/SonarQubeChineseDoc8.1/#sonarqube-admin#/admin/permissions\">Administration > Security > Global Permissions</a></strong>. </p>\n<ul>\n<li><strong>Administer System</strong>: All administration functions for the instance: global configuration.</li>\n<li><strong>Administer Quality Profiles</strong>: Any action on quality profiles.</li>\n<li><strong>Administer Quality Gates</strong>: Any action on quality gates</li>\n<li><strong>Execute Analysis</strong>: Execute analyses (project, view, report, developer), and to get all settings required to perform the analysis, even the secured ones like the scm account password, and so on.</li>\n<li><strong>Create Projects</strong>: Initialize the structure of a new project before its first analysis. This permission is also required when doing the very first analysis of a project that has not already been created via the GUI. * **</li>\n<li><strong>Create Applications</strong>: Create a new Application. * **</li>\n<li><strong>Create Portfolios</strong>: Create a new Portfolio. * **</li>\n</ul>\n<p>* Users with any explicit create permission will see a \"+\" item in the top menu giving access to these functions. If these permissions are removed from global administrators, they will loose quick access to them via the \"+\" menu, <strong>but retain access to creation</strong> via the <strong>Administration</strong> menu.</p>\n<p>** Creating an item does not automatically grant rights to administer it. For that, see <em>Creators permission</em> below.</p>\n<h3>Project Permissions</h3>\n<p>Project permissions are available from the project-level Administration menu: <strong>Administration > Permissions</strong>.</p>\n<p>Project visibility may be toggled between public or private. Making a project private hides its source code and measures from the <code>Anyone</code> group. For both public and private projects, four different permissions can be set:</p>\n<ul>\n<li><strong>Administer Issues</strong>: Change the type and severity of issues, resolve issues as being \"Won't Fix\" or \"False Positive\" (users also need \"Browse\" permission).</li>\n<li><strong>Administer Security Hotspots</strong>: Change the status of a Security Hotspot.</li>\n<li><strong>Administer</strong>: Access project settings and perform administration tasks (users also need \"Browse\" permission).</li>\n<li><strong>Execute Analysis</strong>: Execute analyses (project, view, report, developer), and to get all settings required to perform the analysis, even the secured ones like the scm account password, the jira account password, and so on.</li>\n</ul>\n<p>Private projects have two additional permissions:</p>\n<ul>\n<li><strong>Browse</strong>: Access a project; browse its measures, issues, and Security Hotspots; perform some issue edits (confirm/resolve/reopen, assignment, comment); comment on or change the user assigned to a Security Hotspot.</li>\n<li><strong>See Source Code</strong>: View the project's source code.</li>\n</ul>\n<p>Note that permissions <em>are not</em> cumulative. For instance, if you want to be able to administer the project, you also have to be granted the Browse permission to be able to access the project (which is the default for Public project).</p>\n<p>You can either manually grant permissions for each project to some users and groups or apply permission templates to projects. </p>\n<h2>Permission Templates for Default Permissions</h2>\n<p>SonarQube ships with a default permissions template, which automatically grants specific permissions to certain groups when a project, portfolio, or application is created. It is possible to edit this template, and to create additional templates. A separate template can be set for each type of resource. Further, for projects you can have a template apply only to a subset of new projects using a project key regular expression (the template's <strong>Project Key Pattern</strong>). By default, every new project with a key that matches the supplied pattern will have template's permissions applied.</p>\n<p>Templates are empty immediately after creation. Clicking on the template name will take you to its permission editing interface.</p>\n<p>Templates are administered through <strong><a href=\"/SonarQubeChineseDoc8.1/#sonarqube-admin#/admin/permission_templates\">Administration > Security > Permission Templates</a></strong>.</p>\n<h3>Creators permissions</h3>\n<p><strong>Creators</strong> is a special group that appears only in the permission template editing interface. Any permissions assigned to this group will at the time of project/portfolio/application creation be granted to the single user account used to create the project. This allows SonarQube administrators to let users autonomously create and administer their own projects.</p>\n<p>While templates can be applied after project creation, applying a template that includes \"Creators\" permissions to an existing project/portfolio/application will not grant the relevant permissions to the project's original creator because that association is not stored.</p>\n<h3>Reset project permissions to a template</h3>\n<p>To apply permission templates to projects go to <strong><a href=\"/SonarQubeChineseDoc8.1/#sonarqube-admin#/admin/projects_management\">Administration > Projects > Management</a></strong>. You can  either apply a template to a specific project using the project-specific <strong>Actions > Apply Permission Template</strong> option or use the Bulk Apply Permission Template to apply a template to all selected projects.</p>\n<p>Note that there is no relation between a project and a permission template, meaning that:</p>\n<ul>\n<li>the permissions of a project can be modified after a permission template has been applied to this project</li>\n<li>none of the project permissions is changed when a permission template is modified</li>\n</ul>\n<h2>Settings Encryption</h2>\n<p>Encryption is mostly used to remove clear passwords from settings (database or SCM credentials for instance). The implemented solution is based on a symetric key algorithm. The key point is that the secret key is stored in a secured file on disk. This file must owned by and readable only by the system account that runs the SonarQube server.</p>\n<p>The algorithm is AES 128 bits. Note that 256 bits cipher is not used because it's not supported by default on all Java Virtual Machines (<a href=\"https://confluence.terena.org/display/~visser/No+256+bit+ciphers+for+Java+apps\">see this article</a>).</p>\n<ol>\n<li><strong>Generate the secret key</strong><br>\nA unique secret key must be shared between all parts of the SonarQube infrastructure (server and analyzers). To generate it, go to <strong><a href=\"/SonarQubeChineseDoc8.1/#sonarqube-admin#/admin/settings/encryption\">Administration > Configuration > Encryption</a></strong> and click on Generate Secret Key.</li>\n<li>\n<p><strong>Store the secret key on the SonarQube server</strong>  </p>\n<ul>\n<li>Copy the generated secred key to a file on the machine hosting the SonarQube server. The default location is <em>~/.sonar/sonar-secret.txt</em>. If you want to store it somewhere else, set its path through the <code>sonar.secretKeyPath</code> property in <em>$SONARQUBE-HOME/conf/sonar.properties</em></li>\n<li>Restrict file permissions to the account running the SonarQube server (ownership and read-access only).</li>\n<li>Restart your SonarQube server</li>\n</ul>\n</li>\n<li><strong>Generate the encrypted values of your settings</strong><br>\nGo back to <strong><a href=\"/SonarQubeChineseDoc8.1/#sonarqube-admin#/admin/settings/encryption\">Administration > Configuration > Encryption</a></strong> and use the form that has been added to the interface to generated encrypted versions of your values.\n<img src=\"/images/encrypt-value.png\" alt=\"Encrypt values through the admin interface\"></li>\n<li>\n<p><strong>Use the encrypted values in your SonarQube server configuration</strong><br>\nSimply copy these encrypted values into <em>$SONARQUBE-HOME/conf/sonar.properties</em></p>\n<pre><code>sonar.jdbc.password={aes}CCGCFg4Xpm6r+PiJb1Swfg==  # Encrypted DB password\n...\nsonar.secretKeyPath=C:/path/to/my/secure/location/my_secret_key.txt\n</code></pre>\n</li>\n</ol>"}