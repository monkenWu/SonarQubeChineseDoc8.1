{"expireTime":9007200870884089000,"key":"transformer-remark-markdown-html-089934f1f178bcf722d7b86ec0f7f508-gatsby-remark-custom-blocks-/SonarQubeChineseDoc8.1","val":"<h2>Installing the Database</h2>\n<p>Several <a href=\"/SonarQubeChineseDoc8.1/requirements/requirements/\">database engines</a> are supported. Be sure to follow the requirements listed for your database, they are real requirements not recommendations.</p>\n<p>Create an empty schema and a <code>sonarqube</code> user. Grant this <code>sonarqube</code> user permissions to <code>create</code>, <code>update</code>, and <code>delete</code> objects for this schema.</p>\n<h3>Microsoft SQL Server</h3>\n<div class=\"custom-block alert alert-warning\"><div class=\"custom-block-body\"><p>Collation <strong>MUST</strong> be case-sensitive (CS) and accent-sensitive (AS).<br>\n<code>READ_COMMITED_SNAPSHOT</code> <strong>MUST</strong> be set on the SonarQube database.</p></div></div>\n<p>MS SQL database's shared lock strategy may impact SonarQube runtime. Making sure that <code>is_read_committed_snapshot_on</code> is set to <code>true</code> to prevent SonarQube from facing potential deadlocks under heavy loads. </p>\n<p>Example of query to check <code>is_read_committed_snapshot_on</code>:</p>\n<pre><code>SELECT is_read_committed_snapshot_on FROM sys.databases WHERE name='YourSonarQubeDatabase';\n</code></pre>\n<p>Example of query to update <code>is_read_committed_snapshot_on</code>:</p>\n<pre><code>ALTER DATABASE YourSonarQubeDatabase SET READ_COMMITTED_SNAPSHOT ON WITH ROLLBACK IMMEDIATE;\n</code></pre>\n<h4>Integrated Security</h4>\n<p>To use integrated security: </p>\n<ol>\n<li>\n<p>Download the <a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=57782\">Microsoft SQL JDBC Driver 7.2.2 package</a> and copy the 64-bit version of <code>sqljdbc_auth.dll</code> to any folder in your path. </p>\n</li>\n<li>\n<p><strong>If you're running SonarQube as a Windows service,</strong> make sure the Windows account under which the service is running has permission to connect your SQL server. The account should have <code>db_owner</code> database role membership. </p>\n<p><strong>If you're running the SonarQube server from a command prompt,</strong> the user under which the command prompt is running should have <code>db_owner</code> database role membership. </p>\n</li>\n<li>\n<p>Ensure that <code>sonar.jdbc.username</code> or <code>sonar.jdbc.password</code> properties are commented out or SonarQube will use SQL authentication.</p>\n</li>\n</ol>\n<pre><code>sonar.jdbc.url=jdbc:sqlserver://localhost;databaseName=sonar;integratedSecurity=true\n</code></pre>\n<h4>SQL Authentication</h4>\n<p>To use SQL Authentication, use the following connection string. Also ensure that <code>sonar.jdbc.username</code> and <code>sonar.jdbc.password</code> are set appropriately:</p>\n<pre><code>sonar.jdbc.url=jdbc:sqlserver://localhost;databaseName=sonar\nsonar.jdbc.username=sonarqube\nsonar.jdbc.password=mypassword\n</code></pre>\n<h3>Oracle</h3>\n<p>If there are two SonarQube schemas on the same Oracle instance, especially if they are for two different versions, SonarQube gets confused and picks the first it finds. To avoid this issue:</p>\n<ul>\n<li>Either privileges associated to the SonarQube Oracle user should be decreased</li>\n<li>Or a trigger should be defined on the Oracle side to automatically alter the SonarQube Oracle user session when establishing a new connection:</li>\n</ul>\n<div class=\"custom-block alert alert-warning\"><div class=\"custom-block-body\"><p>Oracle JDBC driver versions 12.1.0.1 and 12.1.0.2 have major bugs, and are not recommended for use with the SonarQube (<a href=\"https://groups.google.com/forum/#!msg/sonarqube/Ahqt1iarqJg/u0BVRJZnBQAJ\">see more details</a>).</p></div></div>\n<h3>PostgreSQL</h3>\n<p>If you want to use a custom schema and not the default \"public\" one, the PostgreSQL <code>search_path</code> property must be set:</p>\n<pre><code>ALTER USER mySonarUser SET search_path to mySonarQubeSchema\n</code></pre>\n<h2>Installing the Web Server</h2>\n<p>First, check the <a href=\"/SonarQubeChineseDoc8.1/requirements/requirements/\">requirements</a>. Then download and unzip the <a href=\"http://www.sonarqube.org/downloads/\">distribution</a> (do not unzip into a directory starting with a digit). </p>\n<p>SonarQube cannot be run as <code>root</code> on Unix-based systems, so create a dedicated user account to use for SonarQube if necessary.</p>\n<p><em>$SONARQUBE-HOME</em> (below) refers to the path to the directory where the SonarQube distribution has been unzipped.</p>\n<h3>Setting the Access to the Database</h3>\n<p>Edit <em>$SONARQUBE-HOME/conf/sonar.properties</em> to configure the database settings. Templates are available for every supported database. Just uncomment and configure the template you need and comment out the lines dedicated to H2:</p>\n<pre><code>Example for PostgreSQL\nsonar.jdbc.username=sonarqube\nsonar.jdbc.password=mypassword\nsonar.jdbc.url=jdbc:postgresql://localhost/sonarqube\n</code></pre>\n<h3>Adding the JDBC Driver</h3>\n<p>Drivers for the supported databases (except Oracle) are already provided. Do not replace the provided drivers; they are the only ones supported.</p>\n<p>For Oracle, copy the JDBC driver into <em>$SONARQUBE-HOME/extensions/jdbc-driver/oracle</em>.</p>\n<h3>Configuring the Elasticsearch storage path</h3>\n<p>By default, Elasticsearch data is stored in <em>$SONARQUBE-HOME/data</em>, but this is not recommended for production instances. Instead, you should store this data elsewhere, ideally in a dedicated volume with fast I/O. Beyond maintaining acceptable performance, doing so will also ease the upgrade of SonarQube.</p>\n<p>Edit <em>$SONARQUBE-HOME/conf/sonar.properties</em> to configure the following settings:</p>\n<pre><code>sonar.path.data=/var/sonarqube/data\nsonar.path.temp=/var/sonarqube/temp\n</code></pre>\n<p>The user used to launch SonarQube must have read and write access to those directories.</p>\n<h3>Starting the Web Server</h3>\n<p>The default port is \"9000\" and the context path is \"/\". These values can be changed in <em>$SONARQUBE-HOME/conf/sonar.properties</em>:</p>\n<pre><code>sonar.web.host=192.0.0.1\nsonar.web.port=80\nsonar.web.context=/sonarqube\n</code></pre>\n<p>Execute the following script to start the server:</p>\n<ul>\n<li>On Linux/Mac OS: bin/<YOUR OS>/sonar.sh start</li>\n<li>On Windows: bin/windows-x86-XX/StartSonar.bat</li>\n</ul>\n<p>You can now browse SonarQube at <em><a href=\"http://localhost:9000\">http://localhost:9000</a></em> (the default System administrator credentials are <code>admin</code>/<code>admin</code>).</p>\n<h3>Tuning the Web Server</h3>\n<p>By default, SonarQube is configured to run on any computer with a simple Java JRE.</p>\n<p>For better performance, the first thing to do when installing a production instance is to use a Java JDK and activate the server mode by uncommenting/setting the following line in <em>$SONARQUBE-HOME/conf/sonar.properties</em>:</p>\n<pre><code>sonar.web.javaOpts=-server\n</code></pre>\n<p>To change the Java JVM used by SonarQube, simply edit <em>$SONARQUBE-HOME/conf/wrapper.conf</em> and update the following line:</p>\n<pre><code>wrapper.java.command=/path/to/my/jdk/bin/java\n</code></pre>\n<h3>Advanced Installation Features</h3>\n<ul>\n<li>Running SonarQube as a Service on <a href=\"/SonarQubeChineseDoc8.1/setup/operate-server/\">Windows</a> or <a href=\"/SonarQubeChineseDoc8.1/setup/operate-server/\">Linux</a></li>\n<li>Running SonarQube <a href=\"/SonarQubeChineseDoc8.1/setup/operate-server/\">behind a Proxy</a></li>\n<li>Running SonarQube Community Edition with <a href=\"https://hub.docker.com/_/sonarqube/\">Docker</a></li>\n</ul>\n<h2>Next Steps</h2>\n<p>Once your server is installed and running, you may also want to <a href=\"/SonarQubeChineseDoc8.1/setup/install-plugin/\">Install Plugins</a>. Then you're ready to begin <a href=\"/SonarQubeChineseDoc8.1/analysis/overview/\">Analyzing Source Code</a>.</p>\n<h2>Troubleshooting/FAQ</h2>\n<h3>Grant more memory to the web server / compute engine / elastic search</h3>\n<p>To grant more memory to a server-side process, uncomment and edit the relevant javaOpts property in <code>$SONARQUBE_HOME/conf/sonar.properties</code>, specifically:</p>\n<ul>\n<li><code>sonar.web.javaOpts</code> (minimum values: <code>-server -Xmx768m</code>)</li>\n<li><code>sonar.ce.javaOpts</code></li>\n<li><code>sonar.search.javaOpts</code></li>\n</ul>\n<h3>Failed to start on Windows Vista</h3>\n<p>SonarQube seems unable to start when installed under the <code>Program Files</code> directory on Windows Vista. It should therefore not be installed there.</p>\n<h3>Failed to start SonarQube with Oracle due to bad <code>USERS</code> table structure</h3>\n<p>When other <code>USERS</code> tables exist in the Oracle DB, if the <code>sonarqube</code> user has read access on this other <code>USERS</code> table, the SonarQube web server can't start and an exception like the following one is thrown:</p>\n<pre><code>ActiveRecord::ActiveRecordError: ORA-00904: \"TOTO\": invalid identifier\n: INSERT INTO users (login, name, email, crypted_password, salt, \ncreated_at, updated_at, remember_token, remember_token_expires_at, toto, id)\nVALUES('admin', 'Administrator', '', 'bba4c8a0f808f9798cf8b1c153a4bb4f9178cf59', '2519754f77ea67e5d7211cd1414698f465aacebb',\nTIMESTAMP'2011-06-24 22:09:14', TIMESTAMP'2011-06-24 22:09:14', null, null, null, ?)\nActiveRecord::ActiveRecordError: ORA-00904: \"TOTO\": invalid identifier\n \n: INSERT INTO users (login, name, email, crypted_password, salt, \ncreated_at, updated_at, remember_token, remember_token_expires_at, toto, id)\nVALUES('admin', 'Administrator', '', 'bba4c8a0f808f9798cf8b1c153a4bb4f9178cf59', \n'2519754f77ea67e5d7211cd1414698f465aacebb', TIMESTAMP'2011-06-24 22:09:14', TIMESTAMP'2011-06-24 22:09:14', null, null, null, ?)\n</code></pre>\n<p>To fix this issue, the rights of the <code>sonarqube</code> Oracle user must be decreased to remove read access on the other <code>USERS</code> table(s).</p>\n<h3>Failed to connect to the Marketplace via proxy</h3>\n<p>Double check that settings for proxy are correctly set in <code>$SONARQUBE_HOME/conf/sonar.properties</code>.\nNote that if your proxy username contains \"\" (backslash), then it should be escaped - for example username \"domain\\user\" in file should look like:</p>\n<pre><code>http.proxyUser=domain\\\\user\n</code></pre>\n<p>For some proxies, the exception \"java.net.ProtocolException: Server redirected too many times\" might mean an incorrect username or password has been configured.</p>\n<h3>Exception java.lang.RuntimeException: can not run elasticsearch as root</h3>\n<p>SonarQube starts an Elasticsearch process, and the same account that is running SonarQube itself will be used for the Elasticsearch process. Since Elasticsearch cannot be run as <code>root</code>, that means SonarQube can't be either. You must choose some other, non-<code>root</code> account with which to run SonarQube, preferably an account dedicated to the purpose.</p>"}