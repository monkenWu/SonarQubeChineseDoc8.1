{"expireTime":9007200870884088000,"key":"transformer-remark-markdown-html-546bfdd0ff0a9139a8298a763f17cabd-gatsby-remark-custom-blocks-/SonarQubeChineseDoc8.1","val":"<h2>什麼是乾淨的寫程式碼?</h2>\n<p>乾淨的寫程式碼是一種能提升程式碼品質的方法，它消除了傳統方法帶來的許多挑戰。身為\n一名開發人員，您將專注於以高標準撰寫新程式碼並且為它負責。SonarQube 能提供讓您\n設定高標準的工具，並且讓您為達到那些標準而感到自豪。</p>\n<h2>專注於 新程式碼（New Code）</h2>\n<p>用乾淨程式碼撰寫方式，您應該一直專注在 新程式碼（New Code）上（在新 程式碼週期（New Code Period）間新增或更改的程式碼）並且確認\n您寫的程式碼是乾淨且安全的。</p>\n<p>新程式碼週期 可於不同層級上被設定（全域、專案、與 <a href=\"https://redirect.sonarsource.com/editions/developer.html\">開發人員版本</a>\n或 <a href=\"https://www.sonarsource.com/plans-and-pricing/\">更高級版本</a>）。依據您設定的層級，您可以依您的狀況調整適當的「新程式碼週期」起始時間。</p>\n<p>有關「新程式碼週期」及其設定的更多資訊，請查看 <a href=\"/SonarQubeChineseDoc8.1/project-administration/new-code-period/\">設定新程式碼週期</a>。</p>\n<h2>個人的責任</h2>\n<p>有乾淨的程式碼撰寫，您將不再為他人的程式碼負責。您擁有自己新程式碼的品質與保障。如果您新增了 問題（Issue），SonarQube 會自動指派給您，\n讓您可以維護自己的程式碼。</p>\n<p>有關「問題」與它們如何被指派的更多資訊，請查看 <a href=\"/SonarQubeChineseDoc8.1/user-guide/issues/\">問題（Issue）</a> 文件。</p>\n<h2>品質門檻（Quality Gates）</h2>\n<p>「品質門檻」是一組能告訴您專案是否可以被釋出了的情況。使用乾淨的程式碼撰寫，\n您的品質門檻應該要：</p>\n<ul>\n<li><strong>聚焦於新程式碼指標</strong> – 當您的「品質門檻」聚焦於新程式碼指標（像是內建的 Sonar way 品質門檻），新的功能將會被乾淨的交付。\n只要您的品質門檻是綠燈，您的發布將會持續改善。</li>\n<li><strong>高標準的制定與執行</strong> – 當一些標準於新的程式碼上被制訂與執行，您不會擔心舊程式碼沒有達到那些標準並且需要整理其他人的程式碼。\n您可以為 <em>您的</em> 程式碼有達到高標準而驕傲。當一個專案沒有達到這些高標準時，它不會通過品質門檻，很顯然的，它還不能被發布。</li>\n</ul>\n<p>有關「品質門檻」與確認「品質門檻」是否有在執行您的標準的更多資訊，請查看 <a href=\"/SonarQubeChineseDoc8.1/user-guide/quality-gates/\">品質門檻</a> 文件。</p>\n<h2>合併請求（Pull Request）之分析</h2>\n<p>您可以用「合併請求」分析和修飾來確保您的程式碼符合標準。合併請求分析使您可以在 SonarQube 使用者介面中\n查看「合併請求」裡的「品質門檻」（Quality Gates）。您接著可以直接在 ALM 的介面中\n使用 SonarQube 問題來裝飾「合併請求」。</p>\n<p>有關設置「合併請求」分析和裝飾的更多資訊，請查看 <a href=\"/SonarQubeChineseDoc8.1/analysis/pull-request/\">合併請求</a> 文件。</p>"}