{"expireTime":9007200870884089000,"key":"transformer-remark-markdown-html-f33e51010710e25ac864e41df139ead9-gatsby-remark-custom-blocks-/SonarQubeChineseDoc8.1","val":"<div class=\"custom-block alert alert-info\"><div class=\"custom-block-body\"><p>By <a href=\"https://www.sonarsource.com/\">SonarSource</a> – GNU LGPL 3 – <a href=\"https://jira.sonarsource.com/browse/MSONAR\">Issue Tracker</a> – <a href=\"https://github.com/SonarSource/sonar-scanner-maven\">Source</a><br>\nClick <a href=\"https://mvnrepository.com/artifact/org.sonarsource.scanner.maven/sonar-maven-plugin\">here</a> for the latest version.</p></div></div>\n<p>The SonarScanner is recommended as the default analyzer for Maven projects.</p>\n<p>The ability to execute the SonarQube analysis via a regular Maven goal makes it available anywhere Maven is available (developer build, CI server, etc.), without the need to manually download, setup, and maintain a SonarQube Runner installation. The Maven build already has much of the information needed for SonarQube to successfully analyze a project. By preconfiguring the analysis based on that information, the need for manual configuration is reduced significantly. </p>\n<h2>Prerequisites</h2>\n<ul>\n<li>Maven 3.x</li>\n<li>At least the minimal version of Java supported by your SonarQube server is in use </li>\n</ul>\n<h2>Global Settings</h2>\n<p>Edit the <a href=\"http://maven.apache.org/settings.html\">settings.xml</a> file, located in <code>$MAVEN_HOME/conf</code> or <code>~/.m2</code>, to set the plugin prefix and optionally the SonarQube server URL.</p>\n<p>Example:</p>\n<pre><code>&#x3C;settings>\n    &#x3C;pluginGroups>\n        &#x3C;pluginGroup>org.sonarsource.scanner.maven&#x3C;/pluginGroup>\n    &#x3C;/pluginGroups>\n    &#x3C;profiles>\n        &#x3C;profile>\n            &#x3C;id>sonar&#x3C;/id>\n            &#x3C;activation>\n                &#x3C;activeByDefault>true&#x3C;/activeByDefault>\n            &#x3C;/activation>\n            &#x3C;properties>\n                &#x3C;!-- Optional URL to server. Default value is http://localhost:9000 -->\n                &#x3C;sonar.host.url>\n                  http://myserver:9000\n                &#x3C;/sonar.host.url>\n            &#x3C;/properties>\n        &#x3C;/profile>\n     &#x3C;/profiles>\n&#x3C;/settings>\n</code></pre>\n<h2>Analyzing</h2>\n<p>Analyzing a Maven project consists of running a Maven goal: <code>sonar:sonar</code> from the directory that holds the main project <code>pom.xml</code>.</p>\n<pre><code>mvn clean verify sonar:sonar\n</code></pre>\n<p>In some situations you may want to run the <code>sonar:sonar</code> goal as a dedicated step. Be sure to use <code>install</code> as first step for multi-module projects</p>\n<pre><code>mvn clean install\nmvn sonar:sonar\n</code></pre>\n<p>To specify the version of sonar-maven-plugin instead of using the latest:</p>\n<pre><code>mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.6.0.1398:sonar\n</code></pre>\n<p>To get coverage information, you'll need to generate the coverage report before the analysis. </p>\n<h2>Configuring Analysis</h2>\n<p>Most analysis properties will be read from your project. If you would like override the default values of specify additional parameters, configure the parameter names found on the <a href=\"/SonarQubeChineseDoc8.1/analysis/analysis-parameters/\">Analysis Parameters</a> page in the <code>&#x3C;properties></code> section of your pom.xml like this:</p>\n<pre><code>&#x3C;properties>\n  &#x3C;sonar.buildString> [...] &#x3C;/sonar.buildString>\n&#x3C;/properties>\n</code></pre>\n<h2>Sample Project</h2>\n<p>To help you get started, a simple project sample is available here: <a href=\"https://github.com/SonarSource/sonar-scanning-examples/tree/master/sonarqube-scanner-maven\">https://github.com/SonarSource/sonar-scanning-examples/tree/master/sonarqube-scanner-maven</a></p>\n<h2>Excluding a module from analysis</h2>\n<ul>\n<li>define property <code>&#x3C;sonar.skip>true&#x3C;/sonar.skip></code> in the <code>pom.xml</code> of the module you want to exclude</li>\n<li>use build profiles to exclude some module (like for integration tests)</li>\n<li>use Advanced Reactor Options (such as \"-pl\"). For example <code>mvn sonar:sonar -pl !module2</code></li>\n</ul>\n<h2>How to Fix Version of Maven Plugin</h2>\n<p>It is recommended to lock down versions of Maven plugins:</p>\n<pre><code>&#x3C;build>\n  &#x3C;pluginManagement>\n    &#x3C;plugins>\n      &#x3C;plugin>\n        &#x3C;groupId>org.sonarsource.scanner.maven&#x3C;/groupId>\n        &#x3C;artifactId>sonar-maven-plugin&#x3C;/artifactId>\n        &#x3C;version>3.6.0.1398&#x3C;/version>\n      &#x3C;/plugin>\n    &#x3C;/plugins>\n  &#x3C;/pluginManagement>\n&#x3C;/build>\n</code></pre>\n<h2>Troubleshooting</h2>\n<p><strong>If you get a java.lang.OutOfMemoryError</strong><br>\nSet the <code>MAVEN_OPTS</code> environment variable, like this in *nix environments:</p>\n<pre><code>export MAVEN_OPTS=\"-Xmx512m\"\n</code></pre>\n<p>On Windows environments, avoid the double-quotes, since they get misinterpreted.</p>\n<pre><code>set MAVEN_OPTS=-Xmx512m\n</code></pre>"}